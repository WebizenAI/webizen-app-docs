(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1706],{6487:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/core-concepts/data-storage",function(){return s(6413)}])},6413:function(e,t,s){"use strict";s.r(t),s.d(t,{__toc:function(){return o}});var n=s(2676),a=s(57),r=s(8949),i=s(7024);let o=[{depth:3,value:"Storage Architecture Diagram",id:"storage-architecture-diagram"},{depth:3,value:"1. Quadstore: The High-Speed Local Cache",id:"1-quadstore-the-high-speed-local-cache"},{depth:3,value:"2. Solid Pod: The Source of Truth",id:"2-solid-pod-the-source-of-truth"},{depth:3,value:"3. IPFS: Immutable File Storage",id:"3-ipfs-immutable-file-storage"}];function d(e){let t=Object.assign({h1:"h1",p:"p",strong:"strong",h3:"h3",ul:"ul",li:"li",code:"code"},(0,r.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:"Data Storage in Webizen"}),"\n",(0,n.jsx)(t.p,{children:"Webizen employs a sophisticated, multi-layered data storage architecture designed to balance performance, data sovereignty, and decentralized resilience. Instead of relying on a single database, the platform intelligently uses different storage systems for different types of data."}),"\n",(0,n.jsxs)(t.p,{children:["The three primary storage layers are: ",(0,n.jsx)(t.strong,{children:"Quadstore"}),", ",(0,n.jsx)(t.strong,{children:"Solid Pods"}),", and ",(0,n.jsx)(t.strong,{children:"IPFS"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"storage-architecture-diagram",children:"Storage Architecture Diagram"}),"\n",(0,n.jsx)(t.p,{children:"This diagram illustrates how data flows between the different storage layers and the application's background process."}),"\n",(0,n.jsx)(i.G$,{chart:'\ngraph TD\n    subgraph "Webizen Desktop Application"\n        A[Background Process]\n    end\n\n    subgraph "Local High-Performance Cache"\n        B[Quadstore (IndexedDB)]\n    end\n\n    subgraph "User-Owned Authoritative Storage"\n        C[Solid Pod (Local or Remote)]\n    end\n\n    subgraph "Decentralized File Storage"\n        D[IPFS Network]\n    end\n\n    A -- "Fast Queries & Caching" <--> B\n    A -- "Persist & Sync" <--> C\n    A -- "Store/Retrieve Files" <--> D\n    C -- "Contains Pointers (CIDs) to" --> D\n\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#f8c8dc,stroke:#333,stroke-width:2px\n    style C fill:#a7c7e7,stroke:#333,stroke-width:2px\n    style D fill:#c1e1c1,stroke:#333,stroke-width:2px\n'}),"\n",(0,n.jsx)(t.h3,{id:"1-quadstore-the-high-speed-local-cache",children:"1. Quadstore: The High-Speed Local Cache"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Technology"}),": A high-performance, browser-compatible RDF database that runs locally within the Webizen Desktop Application, typically using IndexedDB as its backend."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Purpose"}),': To act as a "hot" data cache. It stores structured RDF data that the application needs to access quickly for UI rendering, faceted searches, and real-time operations. All immediate data interactions within the application are performed against the Quadstore to ensure a responsive user experience.']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Data Type"}),": Stores structured, relational metadata, such as user settings, address book contacts, project task lists, and pointers (IPFS CIDs) to larger files."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Lifecycle"}),": Data in the Quadstore is considered ephemeral or a cache. It is periodically synchronized with the user's authoritative Solid Pod."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"2-solid-pod-the-source-of-truth",children:"2. Solid Pod: The Source of Truth"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Technology"}),": A W3C-standardized personal online datastore (Pod). In Webizen, a Solid Pod server runs locally as part of the Desktop Application, but it can also sync with a user's remote Pod provider."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Purpose"}),": The Solid Pod is the user's ",(0,n.jsx)(t.strong,{children:"authoritative data store"}),'. It is the source of truth for their identity and all personal data. It holds the master copy of the user\'s "identity fabric."']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Data Type"}),": Stores all of the user's core RDF data, including their WebID profile, social connections, agreements, and the metadata that links to files stored on IPFS."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Lifecycle"}),": Data is persisted to the Solid Pod for long-term storage and sovereignty. The Pod's access control mechanisms (WAC) are used to manage permissions, ensuring that only authorized applications and users can read or write data."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"3-ipfs-immutable-file-storage",children:"3. IPFS: Immutable File Storage"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Technology"}),": The InterPlanetary File System, a peer-to-peer network for storing and sharing files in a distributed, content-addressed manner."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Purpose"}),": To store large, binary files and data objects that are not suitable for a graph database. This includes documents, images, videos, audio files, and the ",(0,n.jsx)(t.strong,{children:"Hypermedia Content Packages"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Data Type"}),": Any binary data. Files are chunked, content-addressed to get a unique Content Identifier (CID), and stored on the P2P network."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Lifecycle"}),": Data on IPFS is immutable. Once a file is added, it cannot be changed without its CID also changing. The CID of the file is then stored as a piece of metadata in the user's Solid Pod, linking the structured RDF data to the unstructured file content. For example, a user's profile might contain a triple: ",(0,n.jsx)(t.code,{children:"<#me> <foaf:img> <ipfs://Qm...>."})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"By combining these three layers, Webizen achieves the best of all worlds: the speed of a local cache, the sovereignty of a personal data server, and the resilience of a decentralized file network."})]})}t.default=(0,a.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,r.a)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)},pageOpts:{filePath:"pages/core-concepts/data-storage.mdx",route:"/core-concepts/data-storage",timestamp:1752449798e3,title:"Data Storage in Webizen",headings:o},pageNextRoute:"/core-concepts/data-storage"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=6487)}),_N_E=e.O()}]);