(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3850],{1062:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-reference/crypto-service",function(){return s(7332)}])},7332:function(e,n,s){"use strict";s.r(n),s.d(n,{__toc:function(){return c}});var i=s(2676),r=s(57),t=s(8949);let c=[{depth:2,value:"Core Design Principles",id:"core-design-principles"},{depth:2,value:"Key Functions",id:"key-functions"},{depth:3,value:"sign(data, dataType)",id:"signdata-datatype"},{depth:3,value:"verify(signatureObject, originalData, signerWebId)",id:"verifysignatureobject-originaldata-signerwebid"},{depth:3,value:"encrypt(data, preSharedKey)",id:"encryptdata-presharedkey"},{depth:3,value:"decrypt(ciphertext, preSharedKey)",id:"decryptciphertext-presharedkey"},{depth:3,value:"generateKeyPair(type)",id:"generatekeypairtype"}];function l(e){let n=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",a:"a",h2:"h2",ul:"ul",li:"li",hr:"hr",h3:"h3",pre:"pre",span:"span"},(0,t.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"Crypto Service API Reference"}),"\n",(0,i.jsxs)(n.p,{children:["The Crypto Service (",(0,i.jsx)(n.code,{children:"services/crypto.js"}),") is a core component of the Webizen security architecture. It provides a unified and simplified interface for performing all cryptographic operations, abstracting the complexity of the underlying libraries and ensuring that the platform's security policies are consistently enforced."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," This service runs exclusively in the privileged ",(0,i.jsx)(n.strong,{children:"background process"}),". Modules and applications do not call these functions directly but access them through the secure ",(0,i.jsx)(n.a,{href:"./webizen-api",children:"Webizen Core API"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"core-design-principles",children:"Core Design Principles"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Policy-Driven:"})," The service implements the hybrid signing policy defined in ",(0,i.jsx)(n.code,{children:"config/webizen-config-v0.26.json"}),". It automatically selects the correct algorithm (SPHINCS+, ECDSA, or Ed25519) based on the type of data being handled."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Abstraction:"})," It hides the implementation details of the underlying cryptographic libraries (",(0,i.jsx)(n.code,{children:"sphincs"}),", ",(0,i.jsx)(n.code,{children:"@cashtab/wallet-lib"}),", ",(0,i.jsx)(n.code,{children:"ed25519"}),", ",(0,i.jsx)(n.code,{children:"crypto-js"}),"), providing a clean and consistent API to the rest of the application."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security:"})," It is the only part of the system, aside from the wallet module itself, that should have access to private keys."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,i.jsx)(n.h3,{id:"signdata-datatype",children:(0,i.jsx)(n.code,{children:"sign(data, dataType)"})}),"\n",(0,i.jsx)(n.p,{children:"Signs a piece of data according to the cryptographic policy."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": This is the primary function for creating digital signatures. It takes the data to be signed and a ",(0,i.jsx)(n.code,{children:"dataType"})," hint, which it uses to look up the appropriate signing algorithm from the security policy."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"})," (Buffer | string): The data to be signed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataType"})," (string): A hint that determines which cryptographic policy to apply. Possible values include:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'agreement'"}),": Uses SPHINCS+."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'backup'"}),": Uses SPHINCS+."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'transaction'"}),": Uses ECDSA."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'chatMessage'"}),": Uses Ed25519."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'default'"}),": Falls back to a secure default, typically Ed25519."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"Promise<object>"})," - An object containing the signature and the algorithm used.","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"signature"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"..."'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"algorithm"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"SPHINCS+"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"signerWebId"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"[https://user.pod.example/profile#me](https://user.pod.example/profile#me)"'})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"verifysignatureobject-originaldata-signerwebid",children:(0,i.jsx)(n.code,{children:"verify(signatureObject, originalData, signerWebId)"})}),"\n",(0,i.jsx)(n.p,{children:"Verifies a digital signature."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": This function verifies the integrity and authenticity of data. It uses the ",(0,i.jsx)(n.code,{children:"algorithm"})," field within the ",(0,i.jsx)(n.code,{children:"signatureObject"})," to select the correct verification method. It will also fetch the public key from the provided ",(0,i.jsx)(n.code,{children:"signerWebId"}),"'s profile."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"signatureObject"})," (object): The signature object returned by the ",(0,i.jsx)(n.code,{children:"sign"})," function."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"originalData"})," (Buffer | string): The original, unsigned data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"signerWebId"})," (string): The WebID of the user who allegedly signed the data. The function will look up their public key from their Solid Pod."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"Promise<boolean>"})," - ",(0,i.jsx)(n.code,{children:"true"})," if the signature is valid, ",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"encryptdata-presharedkey",children:(0,i.jsx)(n.code,{children:"encrypt(data, preSharedKey)"})}),"\n",(0,i.jsx)(n.p,{children:"Encrypts data using a symmetric key."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Used for ensuring the confidentiality of data at rest, such as the contents of a backup file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"})," (string): The plaintext data to be encrypted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"preSharedKey"})," (string): The secret key to use for encryption."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"Promise<string>"})," - The AES-encrypted, base64-encoded ciphertext."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"decryptciphertext-presharedkey",children:(0,i.jsx)(n.code,{children:"decrypt(ciphertext, preSharedKey)"})}),"\n",(0,i.jsx)(n.p,{children:"Decrypts data using a symmetric key."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Reverses the encryption process."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ciphertext"})," (string): The AES-encrypted, base64-encoded data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"preSharedKey"})," (string): The secret key that was used for encryption."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"Promise<string>"})," - The original plaintext data."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"generatekeypairtype",children:(0,i.jsx)(n.code,{children:"generateKeyPair(type)"})}),"\n",(0,i.jsx)(n.p,{children:"Generates a new public/private key pair."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Used during user onboarding or when a user needs to rotate their keys."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," (string): The type of key pair to generate (",(0,i.jsx)(n.code,{children:"'sphincs'"}),", ",(0,i.jsx)(n.code,{children:"'ecdsa'"}),", ",(0,i.jsx)(n.code,{children:"'ed25519'"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)(n.code,{children:"Promise<object>"})," - An object containing the public and private keys.","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"publicKey"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"..."'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"privateKey"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"..."'})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]})]})}n.default=(0,r.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.a)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/api-reference/crypto-service.mdx",route:"/api-reference/crypto-service",timestamp:1752449798e3,title:"Crypto Service API Reference",headings:c},pageNextRoute:"/api-reference/crypto-service"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=1062)}),_N_E=e.O()}]);