(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[724],{9601:function(e,s,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-reference/internal-rpc-apis",function(){return i(4278)}])},4278:function(e,s,i){"use strict";i.r(s),i.d(s,{__toc:function(){return d}});var n=i(2676),r=i(57),t=i(8949);let d=[{depth:2,value:"Overview",id:"overview"},{depth:2,value:"Key Internal APIs",id:"key-internal-apis"},{depth:3,value:"1. beaker-filesystem API",id:"1-beaker-filesystem-api"},{depth:4,value:"Selected Methods",id:"selected-methods"},{depth:3,value:"2. bookmarks API",id:"2-bookmarks-api"},{depth:4,value:"Selected Methods",id:"selected-methods-1"},{depth:3,value:"3. history API",id:"3-history-api"},{depth:4,value:"Selected Methods",id:"selected-methods-2"}];function l(e){let s=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",ul:"ul",li:"li",strong:"strong",code:"code",hr:"hr",h3:"h3",h4:"h4"},(0,t.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"Internal RPC API Reference"}),"\n",(0,n.jsxs)(s.p,{children:["Beyond the main ",(0,n.jsx)(s.a,{href:"./webizen-api",children:"Webizen Core API"}),", the platform uses a set of internal, lower-level APIs for communication between the foreground (UI) process and the background process. These APIs are defined using a Remote Procedure Call (RPC) system and handle many of the core, browser-like functionalities inherited from the Beaker Browser architecture."]}),"\n",(0,n.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Location"}),": The manifests for these APIs are located in ",(0,n.jsx)(s.code,{children:"app/bg/web-apis/manifests/internal/"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": To provide the UI with granular access to browser-level features like history, bookmarks, and the underlying file systems (Hyperdrives)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Usage"}),": These APIs are typically not called directly by high-level modules. Instead, they are used by core UI components and services in the foreground (",(0,n.jsx)(s.code,{children:"fg"}),") to populate views and handle user interactions. They are exposed to the foreground window via the ",(0,n.jsx)(s.code,{children:"preload.js"})," script."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"key-internal-apis",children:"Key Internal APIs"}),"\n",(0,n.jsx)(s.p,{children:"While there are many internal APIs, this document highlights some of the most critical ones that a developer might need to be aware of."}),"\n",(0,n.jsxs)(s.h3,{id:"1-beaker-filesystem-api",children:["1. ",(0,n.jsx)(s.code,{children:"beaker-filesystem"})," API"]}),"\n",(0,n.jsx)(s.p,{children:"This is a low-level API for interacting with the user's private and public Hyperdrives."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Manifest"}),": ",(0,n.jsx)(s.code,{children:"app/bg/web-apis/manifests/internal/beaker-filesystem.js"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Description"}),": Provides methods for reading, writing, and managing files and directories within the user's personal storage drives. It also includes methods for watching for file changes."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"selected-methods",children:"Selected Methods"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"stat(url)"})}),": Retrieves metadata about a file or directory (e.g., size, type, modification time)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"readFile(url, opts)"})}),": Reads the content of a file. ",(0,n.jsx)(s.code,{children:"opts"})," can specify encoding."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"writeFile(url, data, opts)"})}),": Writes data to a file, overwriting it if it exists."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"readdir(url, opts)"})}),": Reads the contents of a directory, returning a list of files and subdirectories."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"mkdir(url)"})}),": Creates a new directory at the specified path."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"watch(url)"})}),": Creates a real-time event stream for file system changes at a given URL."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"2-bookmarks-api",children:["2. ",(0,n.jsx)(s.code,{children:"bookmarks"})," API"]}),"\n",(0,n.jsx)(s.p,{children:"Manages the user's bookmarks."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Manifest"}),": ",(0,n.jsx)(s.code,{children:"app/bg/web-apis/manifests/internal/bookmarks.js"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Description"}),": Provides CRUD (Create, Read, Update, Delete) operations for bookmarks, which are stored as RDF data in the user's profile graph."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"selected-methods-1",children:"Selected Methods"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"list()"})}),": Returns a list of all bookmarks."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"get(url)"})}),": Retrieves the data for a single bookmark."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"add(bookmarkData)"})}),": Creates a new bookmark. ",(0,n.jsx)(s.code,{children:"bookmarkData"})," is an object containing ",(0,n.jsx)(s.code,{children:"href"}),", ",(0,n.jsx)(s.code,{children:"title"}),", ",(0,n.jsx)(s.code,{children:"tags"}),", etc."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"edit(href, updates)"})}),": Modifies an existing bookmark."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"remove(href)"})}),": Deletes a bookmark."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"3-history-api",children:["3. ",(0,n.jsx)(s.code,{children:"history"})," API"]}),"\n",(0,n.jsx)(s.p,{children:"Manages the user's browsing history."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Manifest"}),": ",(0,n.jsx)(s.code,{children:"app/bg/web-apis/manifests/internal/history.js"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Description"}),": Provides methods for adding, querying, and removing entries from the browsing history database."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"selected-methods-2",children:"Selected Methods"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"add(visit)"})}),": Adds a new visit to the history. The ",(0,n.jsx)(s.code,{children:"visit"})," object includes the ",(0,n.jsx)(s.code,{children:"url"}),", ",(0,n.jsx)(s.code,{children:"title"}),", and timestamp."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"get(url)"})}),": Retrieves all visit records for a specific URL."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"search(query)"})}),": Performs a full-text search over the history records."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"remove(url)"})}),": Removes all visits associated with a specific URL from the history."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"removeAll()"})}),": Clears the entire browsing history."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"These internal APIs provide the essential glue between the user interface and the core data management services running in the background, enabling the rich, application-like experience of Webizen."})]})}s.default=(0,r.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,t.a)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/api-reference/internal-rpc-apis.mdx",route:"/api-reference/internal-rpc-apis",timestamp:1752449798e3,title:"Internal RPC API Reference",headings:d},pageNextRoute:"/api-reference/internal-rpc-apis"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=9601)}),_N_E=e.O()}]);