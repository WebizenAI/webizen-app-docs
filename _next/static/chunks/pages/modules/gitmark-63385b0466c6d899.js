(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[137],{585:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/gitmark",function(){return i(5026)}])},5026:function(e,n,i){"use strict";i.r(n),i.d(n,{__toc:function(){return a}});var t=i(2676),s=i(57),r=i(8949);let a=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Marking a Commit for a Bounty",id:"example-flow-marking-a-commit-for-a-bounty"}];function o(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,r.a)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Module: Gitmark"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:'The Gitmark module provides a novel way to link software development activities directly to the eCash blockchain. It allows users to "gitmark" a specific git commit by associating it with an on-chain transaction, creating a permanent, transparent, and immutable record of the work.'})}),"\n",(0,t.jsx)(n.p,{children:"This feature is particularly useful for managing bounties, tracking funded development, and creating a high-trust audit trail for software projects."}),"\n",(0,t.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,t.jsxs)(n.p,{children:["The primary goal of the ",(0,t.jsx)(n.code,{children:"gitmark"})," module is to bridge the gap between the world of version control (like GitHub and GitLab) and the world of blockchain-based value transfer."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Git Platform Integration:"})," It uses OAuth to securely connect to popular git hosting platforms, including GitHub and GitLab, via their respective APIs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commit Selection:"})," It provides a UI for users to select a specific repository and commit hash that they wish to mark."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"eCash Transaction:"})," It integrates with the ",(0,t.jsx)(n.code,{children:"cashtab"})," module to create and broadcast an eCash transaction. The commit hash and other relevant metadata are embedded in the ",(0,t.jsx)(n.code,{children:"OP_RETURN"})," field of the transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Verifiable Linking:"})," It stores the resulting transaction ID (txid) along with the commit data as a new RDF resource in the user's Solid Pod, creating a verifiable link between the on-chain and off-chain data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Diff Viewer:"})," The UI includes a diff viewer to show the exact code changes associated with the marked commit."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Module Path"}),": ",(0,t.jsx)(n.code,{children:"src/modules/gitmark/index.js"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI Component"}),": The main interface for creating and viewing gitmarks is rendered by ",(0,t.jsx)(n.code,{children:"src/components/Gitmark.js"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Core Libraries"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@octokit/rest"}),": For interacting with the GitHub API."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gitlab"}),": For interacting with the GitLab API."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@cashtab/wallet-lib"}),": Used via the ",(0,t.jsx)(n.code,{children:"cashtab"})," module for creating the eCash transaction."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ontology"}),": ",(0,t.jsx)(n.code,{children:"ontologies/gitmark-v1.ttl"}),' defines the RDF schema for a "Gitmark," linking a commit to a transaction ID and project metadata.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modules/cashtab"}),": Absolutely essential for creating the on-chain transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modules/work"}),": To associate a gitmark with a specific project or task within the Work Management system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modules/settings"}),": For managing the OAuth tokens for GitHub and GitLab."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"services/webizen-api"}),": Specifically the ",(0,t.jsx)(n.code,{children:"/gitmark/commit"})," endpoint, which this module powers."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-flow-marking-a-commit-for-a-bounty",children:"Example Flow: Marking a Commit for a Bounty"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["A project maintainer wants to pay a developer a bounty for fixing a bug. The fix is in commit ",(0,t.jsx)(n.code,{children:"a1b2c3d4"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"The maintainer opens the Gitmark UI, authenticates with GitHub via OAuth, and selects the relevant repository and commit hash."}),"\n",(0,t.jsx)(n.li,{children:"They enter the bounty amount (e.g., 500,000 XEC) and the developer's eCash address."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"Gitmark.js"})," component dispatches an event: ",(0,t.jsx)(n.code,{children:"eventBus.emit('gitmark:create', { repo: '...', commit: 'a1b2c3d4', amount: 500000, recipient: '...' })"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"gitmark"})," module's ",(0,t.jsx)(n.code,{children:"handleEvent"})," function receives the request."]}),"\n",(0,t.jsxs)(n.li,{children:["It calls the ",(0,t.jsx)(n.code,{children:"cashtab"})," module, providing the recipient address, amount, and the commit hash to be embedded in the ",(0,t.jsx)(n.code,{children:"OP_RETURN"})," field."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"cashtab"})," module creates, signs, and broadcasts the transaction. It returns the ",(0,t.jsx)(n.code,{children:"txid"})," to the ",(0,t.jsx)(n.code,{children:"gitmark"})," module."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"gitmark"})," module then creates a new RDF resource using its ontology, linking the commit hash, repository URL, ",(0,t.jsx)(n.code,{children:"txid"}),", and contributor's WebID, and saves it to the project's Solid Pod."]}),"\n",(0,t.jsx)(n.li,{children:"The developer now has a publicly verifiable, on-chain proof of payment for their specific contribution."}),"\n"]})]})}n.default=(0,s.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.a)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)},pageOpts:{filePath:"pages/modules/gitmark.mdx",route:"/modules/gitmark",timestamp:1752449798e3,title:"Module: Gitmark",headings:a},pageNextRoute:"/modules/gitmark"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=585)}),_N_E=e.O()}]);