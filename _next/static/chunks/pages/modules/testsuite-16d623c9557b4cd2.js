(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4063],{5740:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/testsuite",function(){return s(4245)}])},4245:function(e,t,s){"use strict";s.r(t),s.d(t,{__toc:function(){return l}});var n=s(2676),i=s(57),r=s(8949);let l=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Running the Security Tests",id:"example-flow-running-the-security-tests"}];function o(e){let t=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,r.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:"Module: Test Suite"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"The Test Suite module provides a user-facing interface for running unit, integration, and end-to-end tests directly within the Webizen Desktop Application. It gives developers and power users a simple way to verify the health and functionality of the entire platform."})}),"\n",(0,n.jsx)(t.p,{children:"This module is crucial for maintaining a high level of quality and reliability, making it easy to diagnose issues after code changes or updates."}),"\n",(0,n.jsx)(t.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,n.jsxs)(t.p,{children:["The primary goal of the ",(0,n.jsx)(t.code,{children:"testsuite"}),' module is to make testing accessible and transparent. Instead of requiring developers to run complex command-line scripts, it provides a simple "one-click" interface to validate the system\'s integrity.']}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Core Functions:"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"UI-Based Test Runner:"})," It provides a user interface where different test suites (e.g., ",(0,n.jsx)(t.code,{children:"Unit"}),", ",(0,n.jsx)(t.code,{children:"Integration"}),", ",(0,n.jsx)(t.code,{children:"E2E"}),") can be selected and executed."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Functionality Status Reporting:"})," The UI displays the results of the tests in a clear and immediate way. Each major feature or component is listed with a corresponding status indicator:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsxs)(t.strong,{children:["Green Tick (",(0,n.jsx)(t.code,{children:"✓"}),"):"]})," Indicates that all tests for this feature passed."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsxs)(t.strong,{children:["Red Cross (",(0,n.jsx)(t.code,{children:"✗"}),"):"]})," Indicates that one or more tests failed."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Multilingual Error Reporting:"})," When a test fails, the error messages and descriptions are translated into the user's selected language via the ",(0,n.jsx)(t.code,{children:"i18n"})," module. This makes it easier for a global community of developers to understand and diagnose problems."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Integration with Test Files:"})," The module is designed to discover and run the actual test files located in the ",(0,n.jsx)(t.code,{children:"tests/"})," directory of the repository (e.g., ",(0,n.jsx)(t.code,{children:"tests/unit/security.test.js"}),", ",(0,n.jsx)(t.code,{children:"tests/integration/work.test.js"}),")."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Module Path"}),": ",(0,n.jsx)(t.code,{children:"src/modules/testsuite/index.js"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"UI Component"}),": The main test suite interface is rendered by ",(0,n.jsx)(t.code,{children:"src/components/TestSuite.js"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Core Libraries"}),":","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["A test runner library like ",(0,n.jsx)(t.strong,{children:"Jest"})," or ",(0,n.jsx)(t.strong,{children:"Mocha"})," is used under the hood to execute the test files. The ",(0,n.jsx)(t.code,{children:"testsuite"})," module acts as a graphical front-end for this runner."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Dependencies"}),":","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modules/i18n"}),": Essential for providing multilingual error messages and UI text."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"services/logging"}),": To capture detailed logs during test runs for later analysis."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"example-flow-running-the-security-tests",children:"Example Flow: Running the Security Tests"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"A developer navigates to the Test Suite panel in the Webizen application."}),"\n",(0,n.jsx)(t.li,{children:'They see a list of test suites and click the "Run" button next to "Security Integration Tests."'}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"TestSuite.js"})," component dispatches an event: ",(0,n.jsx)(t.code,{children:"eventBus.emit('testsuite:run', { suite: 'integration/security' })"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"testsuite"})," module's ",(0,n.jsx)(t.code,{children:"handleEvent"})," function receives the request."]}),"\n",(0,n.jsxs)(t.li,{children:["It invokes the test runner (e.g., Jest) programmatically, configured to only run the tests in ",(0,n.jsx)(t.code,{children:"tests/integration/security.test.js"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["As the tests run, the test runner emits events for each pass or fail. The ",(0,n.jsx)(t.code,{children:"testsuite"})," module captures these events."]}),"\n",(0,n.jsxs)(t.li,{children:["For a failed test, the module might receive an error like: ",(0,n.jsx)(t.code,{children:"Error: SPHINCS+ signature verification failed for CID xyz."})]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"testsuite"})," module looks up the key for this error message in the ",(0,n.jsx)(t.code,{children:"i18n"})," language files and finds the translation for the user's current language."]}),"\n",(0,n.jsxs)(t.li,{children:["It then dispatches a result event back to the UI: ",(0,n.jsx)(t.code,{children:"eventBus.emit('testsuite:result', { test: 'SPHINCS+ Verification', status: 'failed', details: 'La v\xe9rification de la signature SPHINCS+ a \xe9chou\xe9 pour le CID xyz.' })"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"TestSuite.js"}),' component receives this event and updates the UI to show a red cross next to "SPHINCS+ Verification" and displays the translated error message.']}),"\n"]})]})}t.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,r.a)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)},pageOpts:{filePath:"pages/modules/testsuite.mdx",route:"/modules/testsuite",timestamp:1752449798e3,title:"Module: Test Suite",headings:l},pageNextRoute:"/modules/testsuite"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=5740)}),_N_E=e.O()}]);