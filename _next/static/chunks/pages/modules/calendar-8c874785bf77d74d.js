(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9859],{3194:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/calendar",function(){return i(552)}])},552:function(e,n,i){"use strict";i.r(n),i.d(n,{__toc:function(){return a}});var s=i(2676),t=i(57),r=i(8949);let a=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Creating and Sharing an Event",id:"example-flow-creating-and-sharing-an-event"}];function d(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,r.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Module: Calendar"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"The Calendar module provides a full-featured scheduling and event management system within Webizen. It allows users to create, manage, and share events in a decentralized and interoperable manner."})}),"\n",(0,s.jsx)(n.p,{children:"This module integrates with other core Webizen services to link events to contacts, projects, and verifiable credentials."}),"\n",(0,s.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,s.jsxs)(n.p,{children:["The primary purpose of the ",(0,s.jsx)(n.code,{children:"calendar"})," module is to provide a robust personal and collaborative scheduling tool that respects user data ownership."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Management:"})," Standard calendar functionalities including creating, editing, and deleting events with details like title, description, location, start/end times, and reminders."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"VC-Based Invitations:"})," Instead of traditional email invitations, Webizen uses ",(0,s.jsx)(n.strong,{children:"Verifiable Credentials (VCs)"}),'. When a user is invited to an event, a VC is issued and sent to them, which acts as a cryptographic "ticket" to the event. This is handled by the ',(0,s.jsx)(n.code,{children:"@digitalbazaar/vc"})," library."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solid Pod Integration:"})," All calendar events are stored as RDF data in the user's Solid Pod, using standard vocabularies like ",(0,s.jsx)(n.code,{children:"schema.org"})," for interoperability with other calendar applications."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Task Scheduling:"})," Integrates with the ",(0,s.jsx)(n.code,{children:"xaitask"})," job scheduler to handle reminders and notifications for upcoming events."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI and Interaction:"})," Provides a rich, interactive calendar view using the FullCalendar library, with support for drag-and-drop event creation and modification."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Module Path"}),": ",(0,s.jsx)(n.code,{children:"src/modules/calendar/index.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI Component"}),": The main calendar interface is rendered by ",(0,s.jsx)(n.code,{children:"src/components/Calendar.js"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core Libraries"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FullCalendar"}),": For the interactive calendar UI."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@digitalbazaar/vc"}),": For creating and verifying event invitations as Verifiable Credentials."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"node-schedule"})," (via ",(0,s.jsx)(n.code,{children:"xaitask"}),"): For scheduling reminders."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ontology"}),": ",(0,s.jsx)(n.code,{children:"ontologies/calendar-v1.ttl"})," defines the RDF schema for calendar events, extending ",(0,s.jsx)(n.code,{children:"schema.org"})," vocabulary."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/addressbook"}),": To invite contacts from the user's address book to events."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/work"}),": To link calendar events directly to project tasks and deadlines."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/solidos"}),": To save and retrieve event data from the user's Solid Pod."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/eventBus"}),": To announce new or updated events to the rest of the application."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-flow-creating-and-sharing-an-event",children:"Example Flow: Creating and Sharing an Event"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["A user creates a new event in the ",(0,s.jsx)(n.code,{children:"Calendar.js"})," component and invites a contact."]}),"\n",(0,s.jsxs)(n.li,{children:["The UI component dispatches an event: ",(0,s.jsx)(n.code,{children:"eventBus.emit('calendar:create_event', { eventData: {...}, invitees: [...] })"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"calendar"})," module's ",(0,s.jsx)(n.code,{children:"handleEvent"})," function receives the request."]}),"\n",(0,s.jsxs)(n.li,{children:["It converts the ",(0,s.jsx)(n.code,{children:"eventData"})," into RDF using the ",(0,s.jsx)(n.code,{children:"calendar-v1.ttl"})," ontology."]}),"\n",(0,s.jsxs)(n.li,{children:["It saves the new RDF data to the user's Solid Pod via the ",(0,s.jsx)(n.code,{children:"solidos.js"})," service."]}),"\n",(0,s.jsxs)(n.li,{children:["For each invitee, it generates a Verifiable Credential that represents the invitation, signing it with the user's key via the ",(0,s.jsx)(n.code,{children:"crypto"})," service."]}),"\n",(0,s.jsx)(n.li,{children:"It sends the VC to each invitee through a P2P communication channel."}),"\n",(0,s.jsxs)(n.li,{children:["It schedules a job with ",(0,s.jsx)(n.code,{children:"xaitask"})," to fire a notification event 15 minutes before the event's start time."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This workflow illustrates how the calendar module combines UI interaction, data persistence, verifiable credentials, and task scheduling to create a powerful and decentralized scheduling system."})]})}n.default=(0,t.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)},pageOpts:{filePath:"pages/modules/calendar.mdx",route:"/modules/calendar",timestamp:1752449798e3,title:"Module: Calendar",headings:a},pageNextRoute:"/modules/calendar"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=3194)}),_N_E=e.O()}]);