(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2946],{6762:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/appstore",function(){return i(7660)}])},7660:function(e,n,i){"use strict";i.r(n),i.d(n,{__toc:function(){return l}});var t=i(2676),s=i(57),a=i(8949);let l=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Installing a New Application",id:"example-flow-installing-a-new-application"}];function o(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,a.a)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Module: App Store"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"The App Store module provides a decentralized marketplace for discovering, installing, and managing third-party applications that run within the Webizen ecosystem. It allows users to extend the platform's capabilities with community-developed tools and applications."})}),"\n",(0,t.jsx)(n.p,{children:"This module is designed to foster a rich application ecosystem, similar to a traditional app store, but built on decentralized principles."}),"\n",(0,t.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,t.jsxs)(n.p,{children:["The primary goal of the ",(0,t.jsx)(n.code,{children:"appstore"})," module is to provide a simple and secure way for users to find and install applications that can interact with their personal data in a permissioned way."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"App Discovery:"})," It allows users to browse a curated list of available applications. App listings are fetched from one or more federated RDF-based catalogs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Semantic Metadata:"})," Each application in the store is described by a rich set of RDF metadata, using the ",(0,t.jsx)(n.code,{children:"appstore-v1.ttl"})," ontology. This includes the app's name, description, author, version, and, critically, a report on its cryptographic support."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Crypto Support Reporting:"}),' The metadata for each app explicitly states which cryptographic libraries or standards it uses (e.g., "Uses Cashtab for payments," "Requires WebAuthn"). This provides transparency to the user about the security and functionality of an app before installation.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"One-Click Installation:"})," Users can install an application with a single click. The module handles fetching the application's files (often from IPFS) and installing them into the local app runtime managed by the Desktop Application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JSON-to-RDF Translation:"})," For applications that are not natively built on RDF, the module can work with a translation service to map their JSON data structures to the user's RDF graph, ensuring interoperability."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Module Path"}),": ",(0,t.jsx)(n.code,{children:"src/modules/appstore/index.js"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI Component"}),": The main App Store interface is rendered by ",(0,t.jsx)(n.code,{children:"src/components/AppStore.js"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Core Libraries"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@inrupt/solid-client"}),": For interacting with the local app runtime and installing files."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ontology"}),": ",(0,t.jsx)(n.code,{children:"ontologies/appstore-v1.ttl"})," defines the schema for application metadata."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modules/solid"}),": The local Solid server provides the sandboxed environment where the apps are run."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"services/ipfs"}),": Used to fetch the application packages from the P2P network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"services/permissions"}),": To manage the permissions that an installed application is granted to access the user's data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-flow-installing-a-new-application",children:"Example Flow: Installing a New Application"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["A user opens the ",(0,t.jsx)(n.code,{children:"AppStore.js"})," component and browses the list of available apps."]}),"\n",(0,t.jsx)(n.li,{children:'They find a "Decentralized Blog" app and click on it. The UI displays the app\'s RDF metadata, including its description and a note that it "Requires Solid Pod Write Access."'}),"\n",(0,t.jsxs)(n.li,{children:['The user clicks "Install." The UI dispatches an event: ',(0,t.jsx)(n.code,{children:"eventBus.emit('appstore:install_app', { appUri: '...' })"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"appstore"})," module receives the request. It fetches the application's metadata from the provided URI."]}),"\n",(0,t.jsx)(n.li,{children:"It fetches the application package (e.g., a ZIP file containing HTML, CSS, and JS) from the IPFS CID specified in the metadata."}),"\n",(0,t.jsxs)(n.li,{children:["It unzips the package and saves the files to a new directory within the user's local Solid Pod (e.g., ",(0,t.jsx)(n.code,{children:"/Applications/decentralized-blog/"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["It then prompts the user with a permission request, asking if they want to grant the newly installed application read/write access to the ",(0,t.jsx)(n.code,{children:"/Blog/"})," container in their Pod."]}),"\n",(0,t.jsx)(n.li,{children:"The user approves the permission."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"appstore"}),' module finalizes the installation, and the "Decentralized Blog" app now appears in the user\'s list of installed applications, ready to be launched in a sandboxed webview.']}),"\n"]})]})}n.default=(0,s.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.a)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)},pageOpts:{filePath:"pages/modules/appstore.mdx",route:"/modules/appstore",timestamp:1752449798e3,title:"Module: App Store",headings:l},pageNextRoute:"/modules/appstore"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=6762)}),_N_E=e.O()}]);