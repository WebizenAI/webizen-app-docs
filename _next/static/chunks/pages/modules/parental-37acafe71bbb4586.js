(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2042],{9220:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/parental",function(){return i(5629)}])},5629:function(e,n,i){"use strict";i.r(n),i.d(n,{__toc:function(){return o}});var s=i(2676),t=i(57),a=i(8949);let o=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Restricting Chat Access",id:"example-flow-restricting-chat-access"}];function l(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,a.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Module: Parental Controls"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"The Parental Controls module provides a framework for guardians to manage the digital environment of their wards (e.g., children). It allows for the creation of fine-grained, machine-readable rules that govern a ward's access to content and their ability to interact with others."})}),"\n",(0,s.jsxs)(n.p,{children:["This module leverages the ",(0,s.jsx)(n.strong,{children:"Open Digital Rights Language (ODRL)"})," to create flexible and transparent policies, moving beyond simple blocklists to a more nuanced system of digital guardianship."]}),"\n",(0,s.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,s.jsxs)(n.p,{children:["The primary goal of the ",(0,s.jsx)(n.code,{children:"parental"})," module is to provide powerful and easy-to-use tools for creating a safe and age-appropriate online experience for children and other dependents, while respecting privacy as much as possible."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Guardian/Ward Accounts:"})," Establishes a cryptographic link between a guardian's WebID and a ward's WebID, allowing the guardian to manage policies for the ward's account."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Policy-Based Rules:"})," Instead of simple on/off switches, all restrictions are defined as ODRL policies. This allows for complex and context-aware rules."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content Filtering:"})," Rules can restrict access to content based on metadata, such as age ratings, content tags, or specific keywords."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Interaction Control:"})," Guardians can define policies that limit who a ward can communicate with via the ",(0,s.jsx)(n.code,{children:"chat"}),' module, for example, by creating an "allow list" of approved contacts.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Time-Based Restrictions:"})," ODRL policies can include time constraints, allowing guardians to set limits on screen time or restrict application usage to certain hours of the day."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multilingual Rules:"})," The rules and their descriptions can be defined in any of the platform's supported languages, making them understandable to guardians and wards from different linguistic backgrounds."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Module Path"}),": ",(0,s.jsx)(n.code,{children:"src/modules/parental/index.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI Component"}),": The interface for creating and managing parental control policies is rendered by ",(0,s.jsx)(n.code,{children:"src/components/ParentalControls.js"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ontology"}),": ",(0,s.jsx)(n.code,{children:"ontologies/parental-v1.ttl"})," defines the specific RDF classes and properties for linking guardian and ward accounts. The rules themselves are defined using the standard ",(0,s.jsx)(n.strong,{children:"ODRL"})," vocabulary."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/odrl"}),": A service that would be responsible for parsing and evaluating ODRL policies."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/access"}),": The access control module would be the primary enforcement point, checking all actions against the active ODRL policies for the user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/addressbook"}),": To select contacts for interaction allow-lists."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/solidos"}),": To store the ODRL policies in a secure location within the guardian's and/or ward's Solid Pod."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-flow-restricting-chat-access",children:"Example Flow: Restricting Chat Access"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"A guardian, David, wants to ensure his child, Emily, can only chat with pre-approved family members."}),"\n",(0,s.jsxs)(n.li,{children:["He opens the ",(0,s.jsx)(n.code,{children:"ParentalControls.js"}),' interface, selects Emily\'s profile, and chooses to create a new "Interaction Policy."']}),"\n",(0,s.jsxs)(n.li,{children:["He creates a policy that defines a ",(0,s.jsx)(n.code,{children:"Prohibition"})," for the ",(0,s.jsx)(n.code,{children:"chat"})," action. He then adds an exception to this prohibition for a specific group of WebIDs (the family members) from his address book."]}),"\n",(0,s.jsxs)(n.li,{children:["When David saves the policy, the ",(0,s.jsx)(n.code,{children:"parental"})," module creates a new ODRL policy document in RDF."]}),"\n",(0,s.jsx)(n.li,{children:"This policy is saved to a location in Emily's Solid Pod that only David (the guardian) has write-access to."}),"\n",(0,s.jsxs)(n.li,{children:["Later, when Emily tries to initiate a chat with a new, unapproved contact in her ",(0,s.jsx)(n.code,{children:"Chat.js"})," component, the following happens:\na. The ",(0,s.jsx)(n.code,{children:"chat"})," module attempts to open a communication channel.\nb. Before proceeding, it calls the ",(0,s.jsx)(n.code,{children:"access"})," module to check for permissions.\nc. The ",(0,s.jsx)(n.code,{children:"access"})," module evaluates the action (",(0,s.jsx)(n.code,{children:"chat"}),') against all active policies for Emily. It finds the parental control policy, sees that the recipient is not in the "allow list," and therefore the action is prohibited.\nd. The ',(0,s.jsx)(n.code,{children:"access"}),' module returns a "denied" response, and the chat module displays a message to Emily explaining that she does not have permission to contact this user.']}),"\n"]})]})}n.default=(0,t.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/modules/parental.mdx",route:"/modules/parental",timestamp:1752449798e3,title:"Module: Parental Controls",headings:o},pageNextRoute:"/modules/parental"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=9220)}),_N_E=e.O()}]);