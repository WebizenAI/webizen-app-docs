(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8425],{3941:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/vectordb",function(){return t(6692)}])},6692:function(e,n,t){"use strict";t.r(n),t.d(n,{__toc:function(){return o}});var s=t(2676),i=t(57),r=t(8949);let o=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Semantic Search for a Document",id:"example-flow-semantic-search-for-a-document"}];function a(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,r.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Module: Vector Database"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"The Vector Database module provides the service for storing and querying vector embeddings. It is a crucial backend component that powers Webizen's semantic search capabilities and provides the long-term memory for the AI assistants."})}),"\n",(0,s.jsx)(n.p,{children:"This module uses a local instance of ChromaDB to efficiently handle the high-dimensional data required for similarity searches."}),"\n",(0,s.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,s.jsxs)(n.p,{children:["The primary goal of the ",(0,s.jsx)(n.code,{children:"vectordb"})," module is to create a searchable, semantic index of the user's data. When content is processed, its meaning is converted into a numerical vector (an embedding); this module stores and queries those vectors."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Embedding Storage:"})," It provides a simple API for other modules (primarily the ",(0,s.jsx)(n.code,{children:"ai"})," module) to add, update, and delete vector embeddings. Each embedding is stored with a link back to the original resource's URI."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Similarity Search:"})," Its main function is to perform similarity searches. Given a query vector (representing the meaning of a search term), it returns a list of the most similar vectors from its database, allowing the application to find related content even if the keywords don't match exactly."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Mapping:"})," It maintains a mapping between the vector embeddings and the user's primary RDF graph in Quadstore. This allows the system to retrieve the full, context-rich data for a resource found via a semantic search."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local-First AI:"})," By running ChromaDB locally, this module ensures that the semantic index of the user's personal data remains private and is never sent to a third-party service."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Module Path"}),": ",(0,s.jsx)(n.code,{children:"src/modules/vectordb/index.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core Libraries"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"chromadb"}),": The Python-based vector database that is run as a background process. The module interacts with it via its client API."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ontology"}),": ",(0,s.jsx)(n.code,{children:"ontologies/vectordb-v1.ttl"})," defines the properties used to link a resource in the main RDF graph to its corresponding vector ID in the ChromaDB instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/ai"}),": The ",(0,s.jsx)(n.code,{children:"ai"})," module is the primary consumer of this service. It generates the vector embeddings (using models like Ollama) and sends them to this module for storage. It also sends search queries to this module to power Retrieval-Augmented Generation (RAG)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/library"}),': The Semantic Library uses this module to provide its "search by meaning" functionality.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/quadstore"}),": To link vector search results back to the rich metadata stored in the main RDF graph."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-flow-semantic-search-for-a-document",children:"Example Flow: Semantic Search for a Document"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:'A user types a query into the Semantic Library: "Information about fair-term contribution agreements."'}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"library"})," module sends this text query to the ",(0,s.jsx)(n.code,{children:"ai"})," module."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"ai"})," module uses a text-embedding model to convert the query string into a vector embedding."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"ai"})," module then sends this query vector to the ",(0,s.jsx)(n.code,{children:"vectordb"})," module's ",(0,s.jsx)(n.code,{children:"search"})," function."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"vectordb"})," module performs a similarity search in its ChromaDB instance and finds the top 5 most similar vectors. It returns the URIs of the original documents associated with those vectors (e.g., ",(0,s.jsx)(n.code,{children:"urn:ipfs:bafy..."}),", ",(0,s.jsx)(n.code,{children:"https://user.pod.example/agreements/123"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"library"})," module receives this list of URIs. For each URI, it fetches the full metadata from the ",(0,s.jsx)(n.strong,{children:"Quadstore"})," (e.g., title, author, creation date)."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"library"})," component then displays the rich search results to the user, who has now found relevant documents without needing to match exact keywords."]}),"\n"]})]})}n.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)},pageOpts:{filePath:"pages/modules/vectordb.mdx",route:"/modules/vectordb",timestamp:1752449798e3,title:"Module: Vector Database",headings:o},pageNextRoute:"/modules/vectordb"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=3941)}),_N_E=e.O()}]);