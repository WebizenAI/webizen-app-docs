(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1043],{128:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/settings",function(){return i(9319)}])},9319:function(e,n,i){"use strict";i.r(n),i.d(n,{__toc:function(){return r}});var s=i(2676),t=i(57),l=i(8949);let r=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Changing a UI Theme",id:"example-flow-changing-a-ui-theme"}];function a(e){let n=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,l.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Module: Settings"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"The Settings module provides the central user-facing interface for configuring the Webizen platform. It allows users to manage everything from cosmetic preferences like UI themes to sensitive data such as eCash claims, Verifiable Credentials (VCs), and API keys."})}),"\n",(0,s.jsx)(n.p,{children:"This module acts as the main control panel, giving users granular control over their application experience and data."}),"\n",(0,s.jsx)(n.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,s.jsxs)(n.p,{children:["The primary goal of the ",(0,s.jsx)(n.code,{children:"settings"})," module is to provide a unified and secure location for all user-configurable options."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Core Functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"eCash & SLP Token Management:"})," Provides an interface for users to manage their eCash wallet claims and view their SLP token balances, interacting with the ",(0,s.jsx)(n.code,{children:"cashtab"})," module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Verifiable Credential Management:"})," Allows users to import, view, and manage their VCs. This is where a user could, for example, store a VC representing their university degree or a professional certification."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Theme Management:"})," Users can select and preview different UI themes for the application, including the default light/dark modes and specialized themes like ",(0,s.jsx)(n.code,{children:"pages-ui"})," and ",(0,s.jsx)(n.code,{children:"work_ui"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Language Preferences:"})," Integrates with the ",(0,s.jsx)(n.code,{children:"i18n"})," module to allow users to select their preferred display language for the entire application."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Key and OAuth Token Management:"})," Provides a secure interface for users to add, edit, and remove OAuth tokens (for services like GitHub/GitLab) and API keys (for services like OpenAI)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Module Path"}),": ",(0,s.jsx)(n.code,{children:"src/modules/settings/index.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI Component"}),": The comprehensive settings panel is rendered by ",(0,s.jsx)(n.code,{children:"src/components/Settings.js"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core Libraries"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@cashtab/wallet-lib"}),": Used via the ",(0,s.jsx)(n.code,{children:"cashtab"})," module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@digitalbazaar/vc"}),": For parsing and managing Verifiable Credentials."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ontology"}),": ",(0,s.jsx)(n.code,{children:"ontologies/settings-v1.ttl"})," defines the RDF schema for storing user settings, including language preferences and theme choices, in their Solid Pod."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependencies"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/cashtab"}),": For displaying wallet information and managing claims."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/i18n"}),": For setting the application's language."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modules/work"}),": The ",(0,s.jsx)(n.code,{children:"work_ui"})," theme is managed here."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/solidos"}),": To persist all settings to the user's Solid Pod."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"services/webizen-api"}),": Specifically the ",(0,s.jsx)(n.code,{children:"/settings/configure"})," endpoint, which this module powers."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-flow-changing-a-ui-theme",children:"Example Flow: Changing a UI Theme"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:'The user navigates to the Settings panel and selects the "Appearance" tab.'}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"Settings.js"})," component fetches the available themes (e.g., ",(0,s.jsx)(n.code,{children:"light"}),", ",(0,s.jsx)(n.code,{children:"dark"}),", ",(0,s.jsx)(n.code,{children:"pages-ui"}),") from the configuration."]}),"\n",(0,s.jsxs)(n.li,{children:["The user clicks on the ",(0,s.jsx)(n.code,{children:"pages-ui"})," theme. A live preview is shown."]}),"\n",(0,s.jsxs)(n.li,{children:['The user clicks "Save." The UI dispatches an event: ',(0,s.jsx)(n.code,{children:"eventBus.emit('settings:update', { theme: 'pages-ui' })"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"settings"})," module's ",(0,s.jsx)(n.code,{children:"handleEvent"})," function receives the request."]}),"\n",(0,s.jsxs)(n.li,{children:["It creates or updates an RDF triple in the user's settings graph, for example: ",(0,s.jsx)(n.code,{children:'<#me> <ex:uiTheme> "pages-ui" .'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["It saves the updated settings graph to the user's Solid Pod via the ",(0,s.jsx)(n.code,{children:"solidos.js"})," service."]}),"\n",(0,s.jsxs)(n.li,{children:["It dispatches a ",(0,s.jsx)(n.code,{children:"settings:theme_changed"})," event on the event bus."]}),"\n",(0,s.jsx)(n.li,{children:"The main application component listens for this event and dynamically applies the new CSS styles, changing the application's appearance."}),"\n"]})]})}n.default=(0,t.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)},pageOpts:{filePath:"pages/modules/settings.mdx",route:"/modules/settings",timestamp:1752449798e3,title:"Module: Settings",headings:r},pageNextRoute:"/modules/settings"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=128)}),_N_E=e.O()}]);