(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2349],{4468:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/modules/work",function(){return n(3409)}])},3409:function(e,s,n){"use strict";n.r(s),n.d(s,{__toc:function(){return o}});var t=n(2676),i=n(57),r=n(8949);let o=[{depth:2,value:"Purpose and Functionality",id:"purpose-and-functionality"},{depth:2,value:"Technical Implementation",id:"technical-implementation"},{depth:3,value:"Example Flow: Completing a Task with a Peer Review",id:"example-flow-completing-a-task-with-a-peer-review"}];function a(e){let s=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2",code:"code",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,r.a)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{children:"Module: Work Management"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"The Work Management module is a comprehensive suite of tools for project management, designed for decentralized, collaborative teams. It includes features for managing projects, tasks, contributors, and assets, with integrated peer review and fair-terms contribution mechanisms."})}),"\n",(0,t.jsx)(s.p,{children:"This module aims to be a complete project management solution that operates within the user's sovereign data pod, fostering transparent and equitable collaboration."}),"\n",(0,t.jsx)(s.h2,{id:"purpose-and-functionality",children:"Purpose and Functionality"}),"\n",(0,t.jsxs)(s.p,{children:["The primary goal of the ",(0,t.jsx)(s.code,{children:"work"})," module is to provide a powerful, self-hosted alternative to centralized project management tools like Jira or Trello."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Core Functions:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Project Hierarchy:"})," Supports a nested structure of projects, sub-projects, and tasks."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Contributor & Role Management:"})," Allows for assigning contributors to projects and tasks with specific roles (e.g., ",(0,t.jsx)(s.code,{children:"manager"}),", ",(0,t.jsx)(s.code,{children:"developer"}),", ",(0,t.jsx)(s.code,{children:"tester"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Asset Tracking:"})," Enables linking tasks to specific digital assets, such as code commits (via ",(0,t.jsx)(s.code,{children:"gitmark"}),"), design documents, or media files stored on IPFS."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Visualizations:"})," Provides multiple ways to visualize project progress:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Kanban Boards:"})," For agile task management."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Gantt Charts:"})," For timeline and dependency planning."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Timesheets & Reporting:"})," Includes tools for contributors to log time against tasks and for managers to generate project status reports."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Peer Review System:"})," A built-in system for peer-reviewing completed tasks or contributions, with the reviews stored as verifiable RDF data."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Fair-Terms Contributions:"})," Integrates with the ",(0,t.jsx)(s.code,{children:"agreements"})," module to attach fair-term contribution agreements to projects, ensuring clarity on licensing and compensation."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Module Path"}),": ",(0,t.jsx)(s.code,{children:"src/modules/work/index.js"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"UI Component"}),": The complex user interface for work management is rendered by ",(0,t.jsx)(s.code,{children:"src/components/Work.js"}),", which includes the Kanban and Gantt chart visualizations."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Core Libraries"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"D3.js"}),": Used for rendering the Gantt chart and other data visualizations."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ontologies"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"ontologies/work-v1.ttl"}),": Defines the core schema for projects, tasks, contributors, and timesheets."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"ontologies/work-v1.shacl.ttl"}),": Provides SHACL shapes to validate the integrity of project data."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Dependencies"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"modules/agreements"}),": To attach contribution agreements to projects."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"modules/cashtab"}),": For linking tasks to bounties or payments."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"modules/timeline"}),": To provide data for the Gantt chart visualization."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"modules/i18n"}),": To provide multilingual templates for project types and task descriptions."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"services/solidos"}),": All work management data is persisted to the user's Solid Pod."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-flow-completing-a-task-with-a-peer-review",children:"Example Flow: Completing a Task with a Peer Review"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["A developer, Alice, finishes a task. In the ",(0,t.jsx)(s.code,{children:"Work.js"}),' UI, she drags the task card from "In Progress" to the "In Review" column on the Kanban board.']}),"\n",(0,t.jsxs)(s.li,{children:["The UI dispatches an event: ",(0,t.jsx)(s.code,{children:"eventBus.emit('work:update_task_status', { taskId: '...', newStatus: 'in_review' })"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"work"})," module updates the task's status in the Quadstore and Solid Pod."]}),"\n",(0,t.jsxs)(s.li,{children:["The module's logic, based on the project's rules, assigns a peer, Bob, to review the task. It creates a new ",(0,t.jsx)(s.code,{children:"work:ReviewRequest"})," and sends a notification to Bob."]}),"\n",(0,t.jsx)(s.li,{children:'Bob reviews the work associated with the task (e.g., by viewing a linked "gitmark"). He approves the work in his UI.'}),"\n",(0,t.jsxs)(s.li,{children:["Bob's client dispatches an event: ",(0,t.jsx)(s.code,{children:"eventBus.emit('work:submit_review', { taskId: '...', reviewData: { status: 'approved', comment: '...' } })"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"work"})," module receives the review, saves it as RDF, and updates the original task's status to ",(0,t.jsx)(s.code,{children:"completed"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["If the task had an associated eCash bounty, this status change could automatically trigger a call to the ",(0,t.jsx)(s.code,{children:"cashtab"})," module to release the payment to Alice."]}),"\n"]})]})}s.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.a)(),e.components);return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)},pageOpts:{filePath:"pages/modules/work.mdx",route:"/modules/work",timestamp:1752449798e3,title:"Module: Work Management",headings:o},pageNextRoute:"/modules/work"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=4468)}),_N_E=e.O()}]);