(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3180],{2071:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/platforms/desktop-app",function(){return t(7928)}])},7928:function(e,n,t){"use strict";t.r(n),t.d(n,{__toc:function(){return a}});var s=t(2676),i=t(57),r=t(8949),o=t(7024);let a=[{depth:2,value:"Role and Purpose",id:"role-and-purpose"},{depth:2,value:"Architecture: The Local Server",id:"architecture-the-local-server"}];function l(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",strong:"strong",ul:"ul",li:"li",a:"a",code:"code"},(0,r.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Platform: Desktop Application"}),"\n",(0,s.jsx)(n.p,{children:"The Webizen Desktop Application is the heart and brain of the entire ecosystem. Built with Electron, it is a full-featured, cross-platform application that runs locally on the user's machine, providing the powerful backend services that the Web Extension and Mobile App rely on."}),"\n",(0,s.jsx)(n.h2,{id:"role-and-purpose",children:"Role and Purpose"}),"\n",(0,s.jsxs)(n.p,{children:["While the Web Extension offers convenience, the Desktop Application provides ",(0,s.jsx)(n.strong,{children:"sovereignty and power"}),". It is the component that truly frees the user's data from centralized servers."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local Server and API Host:"})," It runs a local HTTPS server that exposes the ",(0,s.jsx)(n.a,{href:"../api-reference/webizen-api",children:"Webizen Core API"})," over a secure WebSocket connection. This allows other parts of the ecosystem, as well as third-party applications, to interact with the user's data in a controlled and secure manner."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P2P Node:"})," It acts as a full peer in the decentralized networks, running nodes for IPFS, WebTorrent, and GUN.eco. This enables direct data sharing and real-time communication without intermediaries."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Secure Data Hub:"})," It manages the user's local ",(0,s.jsx)(n.strong,{children:"Solid Pod"})," and the high-speed ",(0,s.jsx)(n.strong,{children:"Quadstore"})," cache. All sensitive cryptographic keys are managed exclusively within this application's secure process."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Heavy Lifting:"})," It handles all computationally intensive tasks, such as processing AI model queries (Ollama), encrypting backups, and signing large data packages."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Application Runtime:"})," It provides a sandboxed environment for running local Solid and Webizen applications, similar in concept to the historical ",(0,s.jsx)(n.code,{children:"cimba"})," project."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture-the-local-server",children:"Architecture: The Local Server"}),"\n",(0,s.jsx)(n.p,{children:'A key feature of the Desktop App is its built-in local server. This server is the foundation for the "local-first" architecture of Webizen.'}),"\n",(0,s.jsx)(o.G$,{chart:'\ngraph TD\n    subgraph "Webizen Desktop Application"\n        A[Background Process]\n        B["Local HTTPS/WSS Server (localhost:8080)"]\n        C["Local App Runtime (Webviews)"]\n    end\n\n    subgraph "External Clients"\n        D[Web Extension]\n        E[Mobile App (via Tailscale)]\n        F[Third-Party Local App]\n    end\n\n    A -- "Manages" --> B\n    B -- "Serves HTML/JS to" --> C\n    C -- "API Calls" --> B\n    D -- "API Calls" --> B\n    E -- "API Calls" --> B\n    F -- "API Calls" --> B\n\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#f8c8dc,stroke:#333,stroke-width:2px\n    style C fill:#cfc,stroke:#333,stroke-width:2px\n'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Endpoints:"})," The server hosts the core API endpoints, allowing authenticated clients to perform actions on behalf of the user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local App Hosting:"}),' The server provides a runtime environment for sandboxed web applications. A user can "install" a Solid app, and the Desktop Application will serve its files from ',(0,s.jsx)(n.code,{children:"localhost"}),". This allows the app to run locally while still being able to interact with the user's data through the secure Webizen API, which is exposed to its ",(0,s.jsx)(n.code,{children:"window"})," object. This architecture provides a powerful way to run decentralized applications in a secure, sandboxed environment, with the user always in control of data access permissions."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"By running these core services locally, the Desktop Application ensures that the user maintains ultimate control and ownership over their data and their digital identity."})]})}n.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/platforms/desktop-app.mdx",route:"/platforms/desktop-app",timestamp:1752449798e3,title:"Platform: Desktop Application",headings:a},pageNextRoute:"/platforms/desktop-app"})}},function(e){e.O(0,[57,2888,9774,179],function(){return e(e.s=2071)}),_N_E=e.O()}]);